name: Trigger on PR Approval

on: [push]
# on:
#   pull_request:
#     types: [opened]
#   pull_request_review:
#     types: [submitted]

jobs:
  unit_test_job:
    defaults:
      run:
        shell: bash -el {0}
    name: Unit Test Job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          allow-softlinks: true
          installer-url: https://github.com/conda-forge/miniforge/releases/download/4.8.3-2/Miniforge-pypy3-4.8.3-2-Linux-x86_64.sh
          show-channel-urls: true
          use-only-tar-bz2: true
      - name: Conda Setup
        run: |
          echo "Setting up conda env"
          conda create --name mle-dev python=3.9 numpy matplotlib scipy scikit-learn pandas flake8
          echo "activate conda env"
          conda activate mle-dev
          echo "conda env activated"
      - name: Install the package in dev mode
        run: |
          python -m pip install --upgrade pip setuptools
          pip cache purge
          conda install fsspec
          pip install -e .
          pip install pytest
          pip install pytest-mock
          cd tests
          pytest -s ingest_data_test.py train_test.py score_test.py
      - name: Install Tree
        run: sudo apt-get install -y tree
      - name: Tree structure After Packaging
        run: tree
  build_job:
    defaults:
      run:
        shell: bash -el {0}
    name: Build Job
    needs: unit_test_job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          allow-softlinks: true
          installer-url: https://github.com/conda-forge/miniforge/releases/download/4.8.3-2/Miniforge-pypy3-4.8.3-2-Linux-x86_64.sh
          show-channel-urls: true
          use-only-tar-bz2: true
      - name: Conda Setup
        run: |
          echo "Setting up conda env"
          conda create --name mle-dev python=3.9 numpy matplotlib scipy scikit-learn pandas flake8
          echo "activate conda env"
          conda activate mle-dev
          echo "conda env activated"
      - name: Build the package
        run: |
          pip install build
          python -m build
      - name: Install the package and run test
        run: |
          cd dist
          pip install house_value_prediction-0.0.1-py3-none-any.whl
          pip install pytest
          pip install pytest-mock
          echo "Running test"
          cd ..
          cd tests
          pytest installation_test.py
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: house_value_prediction_artifacts
          path: dist/*
  deploy_job:
    defaults:
      run:
        shell: bash -el {0}
    name: Deploy Job
    needs: build_job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          allow-softlinks: true
          installer-url: https://github.com/conda-forge/miniforge/releases/download/4.8.3-2/Miniforge-pypy3-4.8.3-2-Linux-x86_64.sh
          show-channel-urls: true
          use-only-tar-bz2: true
      - name: Conda Setup
        run: |
          echo "Setting up conda env"
          conda create --name mle-dev python=3.9 numpy matplotlib scipy scikit-learn pandas flake8
          echo "activate conda env"
          conda activate mle-dev
          echo "conda env activated"
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: house_value_prediction_artifacts
          path: ./artifacts
      - name: Install the package and run tests
        run: |
          cd artifacts
          pip install house_value_prediction-0.0.1-py3-none-any.whl
      - name: Running Scripts using -h
        run: |
          cd scripts
          python ingest_data_script -h
          python train_script -h
          python score_script -h
      - name: Running Scripts without -h
        run: |
          python ingest_data_script --dataset_location /home/runner/work/mle-training/mle-training/scripts_output/ingest_data
          python train_script --dataset_location /home/runner/work/mle-training/mle-training/scripts_output/ingest_data --model_location /home/runner/work/mle-training/mle-training/scripts_output/train
          python score_script --dataset_location /home/runner/work/mle-training/mle-training/scripts_output/ingest_data --model_location /home/runner/work/mle-training/mle-training/scripts_output/train
